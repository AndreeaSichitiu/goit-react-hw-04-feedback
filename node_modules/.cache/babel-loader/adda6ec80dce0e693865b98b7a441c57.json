{"ast":null,"code":"var _jsxFileName = \"/home/andreea/Projects/go-it/goit-react-hw-04-feedback/src/components/FeedbackOptions/FeedbackOptions.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport style from './FeedbackOptions.module.css';\nimport PropTypes from 'prop-types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function FeedbackOptions(_ref) {\n  _s();\n\n  let {\n    options,\n    handleFeedback,\n    countTotalFeedback,\n    countPositiveFeedbackPercentage\n  } = _ref;\n  const [feedbacks, setFeedbacks] = useState({\n    good: 0,\n    neutral: 0,\n    bad: 0\n  });\n\n  handleFeedback = event => {\n    const feedback = event.target.name;\n    setFeedbacks(prev => {\n      return {\n        [feedback]: prev[feedback] + 1\n      };\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: style.buttonContainer,\n    children: options.map(option => {\n      return /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        name: option,\n        onClick: handleFeedback,\n        className: style.feedbackButton,\n        children: option\n      }, option, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n}\n\n_s(FeedbackOptions, \"3n7tpwujRWRnB255hjusCy8TnlE=\");\n\n_c = FeedbackOptions;\nFeedbackOptions.propTypes = {\n  options: PropTypes.array.isRequired,\n  onLeaveFeedback: PropTypes.func.isRequired\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"FeedbackOptions\");","map":{"version":3,"sources":["/home/andreea/Projects/go-it/goit-react-hw-04-feedback/src/components/FeedbackOptions/FeedbackOptions.jsx"],"names":["React","useState","style","PropTypes","FeedbackOptions","options","handleFeedback","countTotalFeedback","countPositiveFeedbackPercentage","feedbacks","setFeedbacks","good","neutral","bad","event","feedback","target","name","prev","buttonContainer","map","option","feedbackButton","propTypes","array","isRequired","onLeaveFeedback","func"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,KAAP,MAAkB,8BAAlB;AAEA,OAAOC,SAAP,MAAsB,YAAtB;;AAEA,eAAe,SAASC,eAAT,OAA2G;AAAA;;AAAA,MAAlF;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,cAAX;AAA2BC,IAAAA,kBAA3B;AAA+CC,IAAAA;AAA/C,GAAkF;AAC1H,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BT,QAAQ,CAAC;AAACU,IAAAA,IAAI,EAAE,CAAP;AACzCC,IAAAA,OAAO,EAAE,CADgC;AAEzCC,IAAAA,GAAG,EAAE;AAFoC,GAAD,CAA1C;;AAKEP,EAAAA,cAAc,GAAGQ,KAAK,IAAI;AACxB,UAAMC,QAAQ,GAAGD,KAAK,CAACE,MAAN,CAAaC,IAA9B;AACAP,IAAAA,YAAY,CAACQ,IAAI,IAAI;AACnB,aAAO;AACL,SAACH,QAAD,GAAYG,IAAI,CAACH,QAAD,CAAJ,GAAiB;AADxB,OAAP;AAGD,KAJW,CAAZ;AAKD,GAPD;;AAWA,sBACE;AAAK,IAAA,SAAS,EAAEb,KAAK,CAACiB,eAAtB;AAAA,cACGd,OAAO,CAACe,GAAR,CAAYC,MAAM,IAAI;AACrB,0BACE;AAEE,QAAA,IAAI,EAAC,QAFP;AAGE,QAAA,IAAI,EAAEA,MAHR;AAIE,QAAA,OAAO,EAAEf,cAJX;AAKE,QAAA,SAAS,EAAEJ,KAAK,CAACoB,cALnB;AAAA,kBAOGD;AAPH,SACOA,MADP;AAAA;AAAA;AAAA;AAAA,cADF;AAWD,KAZA;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAiBD;;GAlCuBjB,e;;KAAAA,e;AAoCxBA,eAAe,CAACmB,SAAhB,GAA4B;AAC1BlB,EAAAA,OAAO,EAAEF,SAAS,CAACqB,KAAV,CAAgBC,UADC;AAE1BC,EAAAA,eAAe,EAAEvB,SAAS,CAACwB,IAAV,CAAeF;AAFN,CAA5B","sourcesContent":["import React, {useState} from 'react';\nimport style from './FeedbackOptions.module.css';\n\nimport PropTypes from 'prop-types';\n\nexport default function FeedbackOptions({ options, handleFeedback, countTotalFeedback, countPositiveFeedbackPercentage }) {\nconst [feedbacks, setFeedbacks] = useState({good: 0,\n  neutral: 0,\n  bad: 0,});\n   \n\n  handleFeedback = event => {\n    const feedback = event.target.name;\n    setFeedbacks(prev => {\n      return {\n        [feedback]: prev[feedback] + 1,\n      };\n    });\n  };\n\n\n\n  return (\n    <div className={style.buttonContainer}>\n      {options.map(option => {\n        return (\n          <button\n            key={option}\n            type=\"button\"\n            name={option}\n            onClick={handleFeedback}\n            className={style.feedbackButton}\n          >\n            {option}\n          </button>\n        );\n      })}\n    </div>\n  );\n}\n\nFeedbackOptions.propTypes = {\n  options: PropTypes.array.isRequired,\n  onLeaveFeedback: PropTypes.func.isRequired,\n};\n"]},"metadata":{},"sourceType":"module"}