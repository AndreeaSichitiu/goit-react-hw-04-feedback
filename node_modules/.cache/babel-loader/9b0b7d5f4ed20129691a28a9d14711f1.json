{"ast":null,"code":"var _jsxFileName = \"/home/andreea/Projects/go-it/goit-react-hw-02-feedback/src/components/App.jsx\";\nimport React, { Component } from 'react';\nimport FeedbackOptions from './FeedbackOptions/FeedbackOptions';\nimport Statistics from './Statistics/Statistics';\nimport Notification from './Notification/Notification';\nimport Section from './Section/Section';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport class App extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      good: 0,\n      neutral: 0,\n      bad: 0\n    };\n\n    this.onLeaveFeedback = event => {\n      const feedback = event.target.name;\n      this.setState(prev => {\n        return {\n          [feedback]: prev[feedback] + 1\n        };\n      });\n    };\n\n    this.countTotalFeedback = () => {\n      let totalFeedback = this.state.good + this.state.neutral + this.state.bad;\n      return totalFeedback;\n    };\n\n    this.countPositiveFeedbackPercentage = () => {\n      return Math.round(this.state.good / this.countTotalFeedback() * 100);\n    };\n  }\n\n  render() {\n    const objKey = Object.keys(this.state);\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Section, {\n        title: \"Please leave feedback\",\n        children: [/*#__PURE__*/_jsxDEV(FeedbackOptions, {\n          options: objKey,\n          onLeaveFeedback: this.onLeaveFeedback\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this), this.countTotalFeedback() !== 0 ? /*#__PURE__*/_jsxDEV(Statistics, {\n          good: this.state.good,\n          neutral: this.state.neutral,\n          bad: this.state.bad,\n          total: this.countTotalFeedback(),\n          positivePercentage: this.countPositiveFeedbackPercentage()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(Notification, {\n          message: \"There is no feedback\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)\n    }, void 0, false);\n  }\n\n}","map":{"version":3,"sources":["/home/andreea/Projects/go-it/goit-react-hw-02-feedback/src/components/App.jsx"],"names":["React","Component","FeedbackOptions","Statistics","Notification","Section","App","state","good","neutral","bad","onLeaveFeedback","event","feedback","target","name","setState","prev","countTotalFeedback","totalFeedback","countPositiveFeedbackPercentage","Math","round","render","objKey","Object","keys"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,eAAP,MAA4B,mCAA5B;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAOC,YAAP,MAAyB,6BAAzB;AACA,OAAOC,OAAP,MAAoB,mBAApB;;;AAEA,OAAO,MAAMC,GAAN,SAAkBL,SAAlB,CAA4B;AAAA;AAAA;AAAA,SACjCM,KADiC,GACzB;AACNC,MAAAA,IAAI,EAAE,CADA;AAENC,MAAAA,OAAO,EAAE,CAFH;AAGNC,MAAAA,GAAG,EAAE;AAHC,KADyB;;AAAA,SAOjCC,eAPiC,GAOfC,KAAK,IAAI;AACzB,YAAMC,QAAQ,GAAGD,KAAK,CAACE,MAAN,CAAaC,IAA9B;AACA,WAAKC,QAAL,CAAcC,IAAI,IAAI;AACpB,eAAO;AACL,WAACJ,QAAD,GAAYI,IAAI,CAACJ,QAAD,CAAJ,GAAiB;AADxB,SAAP;AAGD,OAJD;AAKD,KAdgC;;AAAA,SAgBjCK,kBAhBiC,GAgBZ,MAAM;AACzB,UAAIC,aAAa,GAAG,KAAKZ,KAAL,CAAWC,IAAX,GAAkB,KAAKD,KAAL,CAAWE,OAA7B,GAAuC,KAAKF,KAAL,CAAWG,GAAtE;AACA,aAAOS,aAAP;AACD,KAnBgC;;AAAA,SAqBjCC,+BArBiC,GAqBC,MAAM;AACtC,aAAOC,IAAI,CAACC,KAAL,CAAY,KAAKf,KAAL,CAAWC,IAAX,GAAkB,KAAKU,kBAAL,EAAnB,GAAgD,GAA3D,CAAP;AACD,KAvBgC;AAAA;;AAyBjCK,EAAAA,MAAM,GAAG;AACP,UAAMC,MAAM,GAAGC,MAAM,CAACC,IAAP,CAAY,KAAKnB,KAAjB,CAAf;AACA,wBACE;AAAA,6BACE,QAAC,OAAD;AAAS,QAAA,KAAK,EAAC,uBAAf;AAAA,gCACE,QAAC,eAAD;AACE,UAAA,OAAO,EAAEiB,MADX;AAEE,UAAA,eAAe,EAAE,KAAKb;AAFxB;AAAA;AAAA;AAAA;AAAA,gBADF,EAMG,KAAKO,kBAAL,OAA8B,CAA9B,gBACC,QAAC,UAAD;AACE,UAAA,IAAI,EAAE,KAAKX,KAAL,CAAWC,IADnB;AAEE,UAAA,OAAO,EAAE,KAAKD,KAAL,CAAWE,OAFtB;AAGE,UAAA,GAAG,EAAE,KAAKF,KAAL,CAAWG,GAHlB;AAIE,UAAA,KAAK,EAAE,KAAKQ,kBAAL,EAJT;AAKE,UAAA,kBAAkB,EAAE,KAAKE,+BAAL;AALtB;AAAA;AAAA;AAAA;AAAA,gBADD,gBASC,QAAC,YAAD;AAAc,UAAA,OAAO,EAAC;AAAtB;AAAA;AAAA;AAAA;AAAA,gBAfJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,qBADF;AAsBD;;AAjDgC","sourcesContent":["import React, { Component } from 'react';\nimport FeedbackOptions from './FeedbackOptions/FeedbackOptions';\nimport Statistics from './Statistics/Statistics';\nimport Notification from './Notification/Notification';\nimport Section from './Section/Section';\n\nexport class App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  onLeaveFeedback = event => {\n    const feedback = event.target.name;\n    this.setState(prev => {\n      return {\n        [feedback]: prev[feedback] + 1,\n      };\n    });\n  };\n\n  countTotalFeedback = () => {\n    let totalFeedback = this.state.good + this.state.neutral + this.state.bad;\n    return totalFeedback;\n  };\n\n  countPositiveFeedbackPercentage = () => {\n    return Math.round((this.state.good / this.countTotalFeedback()) * 100);\n  };\n\n  render() {\n    const objKey = Object.keys(this.state);\n    return (\n      <>\n        <Section title=\"Please leave feedback\">\n          <FeedbackOptions\n            options={objKey}\n            onLeaveFeedback={this.onLeaveFeedback}\n          />\n\n          {this.countTotalFeedback() !== 0 ? (\n            <Statistics\n              good={this.state.good}\n              neutral={this.state.neutral}\n              bad={this.state.bad}\n              total={this.countTotalFeedback()}\n              positivePercentage={this.countPositiveFeedbackPercentage()}\n            />\n          ) : (\n            <Notification message=\"There is no feedback\" />\n          )}\n        </Section>\n      </>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}