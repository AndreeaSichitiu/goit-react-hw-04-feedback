{"ast":null,"code":"var _jsxFileName = \"/home/andreea/Projects/go-it/goit-react-hw-04-feedback/src/components/App.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport FeedbackOptions from \"./FeedbackOptions/FeedbackOptions\";\nimport Statistics from \"./Statistics/Statistics\";\nimport Notification from \"./Notification/Notification\";\nimport Section from \"./Section/Section\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const App = () => {\n  _s();\n\n  const [feedbacks, setFeedbacks] = useState({\n    good: 0,\n    neutral: 0,\n    bad: 0\n  });\n\n  const handleFeedback = event => {\n    const feedback = event.target;\n    setFeedbacks(prev => ({ ...prev,\n      [feedback]: prev + 1\n    }));\n  };\n\n  const countTotalFeedback = () => {\n    let totalFeedback = feedbacks.good + feedbacks.neutral + feedbacks.bad;\n    return totalFeedback;\n  };\n\n  const countPositiveFeedbackPercentage = () => {\n    return Math.round(feedbacks.good / countTotalFeedback() * 100);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Section, {\n      title: \"Please leave feedback\",\n      children: [/*#__PURE__*/_jsxDEV(FeedbackOptions, {\n        options: ['good', 'neutral', 'bad'],\n        onLeaveFeedback: handleFeedback\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), countTotalFeedback() !== 0 ? /*#__PURE__*/_jsxDEV(Statistics, {\n        good: feedbacks.good,\n        neutral: feedbacks.neutral,\n        bad: feedbacks.bad,\n        total: countTotalFeedback(),\n        positivePercentage: countPositiveFeedbackPercentage()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(Notification, {\n        message: \"There is no feedback\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(App, \"CU08eRs180Jmtsq58X8tEgnP70w=\");\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/andreea/Projects/go-it/goit-react-hw-04-feedback/src/components/App.jsx"],"names":["React","useState","FeedbackOptions","Statistics","Notification","Section","App","feedbacks","setFeedbacks","good","neutral","bad","handleFeedback","event","feedback","target","prev","countTotalFeedback","totalFeedback","countPositiveFeedbackPercentage","Math","round"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,eAAP,MAA4B,mCAA5B;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAOC,YAAP,MAAyB,6BAAzB;AACA,OAAOC,OAAP,MAAoB,mBAApB;;;AAEA,OAAO,MAAMC,GAAG,GAAG,MAAM;AAAA;;AACvB,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BP,QAAQ,CAAC;AAAEQ,IAAAA,IAAI,EAAE,CAAR;AAAWC,IAAAA,OAAO,EAAE,CAApB;AAAuBC,IAAAA,GAAG,EAAE;AAA5B,GAAD,CAA1C;;AAEA,QAAMC,cAAc,GAAGC,KAAK,IAAI;AAC9B,UAAMC,QAAQ,GAAGD,KAAK,CAACE,MAAvB;AACAP,IAAAA,YAAY,CAACQ,IAAI,KAAK,EACpB,GAAGA,IADiB;AAEpB,OAACF,QAAD,GAAYE,IAAI,GAAG;AAFC,KAAL,CAAL,CAAZ;AAID,GAND;;AASA,QAAMC,kBAAkB,GAAG,MAAM;AAC/B,QAAIC,aAAa,GAAGX,SAAS,CAACE,IAAV,GAAiBF,SAAS,CAACG,OAA3B,GAAqCH,SAAS,CAACI,GAAnE;AACA,WAAOO,aAAP;AACD,GAHD;;AAKA,QAAMC,+BAA+B,GAAG,MAAM;AAC5C,WAAOC,IAAI,CAACC,KAAL,CAAYd,SAAS,CAACE,IAAV,GAAiBQ,kBAAkB,EAApC,GAA0C,GAArD,CAAP;AACD,GAFD;;AAIA,sBACE;AAAA,2BACE,QAAC,OAAD;AAAS,MAAA,KAAK,EAAC,uBAAf;AAAA,8BACE,QAAC,eAAD;AAAiB,QAAA,OAAO,EAAE,CAAC,MAAD,EAAS,SAAT,EAAoB,KAApB,CAA1B;AAAsD,QAAA,eAAe,EAAEL;AAAvE;AAAA;AAAA;AAAA;AAAA,cADF,EAGGK,kBAAkB,OAAO,CAAzB,gBACC,QAAC,UAAD;AACE,QAAA,IAAI,EAAEV,SAAS,CAACE,IADlB;AAEE,QAAA,OAAO,EAAEF,SAAS,CAACG,OAFrB;AAGE,QAAA,GAAG,EAAEH,SAAS,CAACI,GAHjB;AAIE,QAAA,KAAK,EAAEM,kBAAkB,EAJ3B;AAKE,QAAA,kBAAkB,EAAEE,+BAA+B;AALrD;AAAA;AAAA;AAAA;AAAA,cADD,gBASC,QAAC,YAAD;AAAc,QAAA,OAAO,EAAC;AAAtB;AAAA;AAAA;AAAA;AAAA,cAZJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAmBD,CAxCM;;GAAMb,G;;KAAAA,G","sourcesContent":["import React, { useState } from \"react\";\nimport FeedbackOptions from \"./FeedbackOptions/FeedbackOptions\";\nimport Statistics from \"./Statistics/Statistics\";\nimport Notification from \"./Notification/Notification\";\nimport Section from \"./Section/Section\";\n\nexport const App = () => {\n  const [feedbacks, setFeedbacks] = useState({ good: 0, neutral: 0, bad: 0 });\n\n  const handleFeedback = event => {\n    const feedback = event.target;\n    setFeedbacks(prev => ({\n      ...prev,\n      [feedback]: prev + 1,\n    }));\n  };\n \n  \n  const countTotalFeedback = () => {\n    let totalFeedback = feedbacks.good + feedbacks.neutral + feedbacks.bad;\n    return totalFeedback;\n  };\n\n  const countPositiveFeedbackPercentage = () => {\n    return Math.round((feedbacks.good / countTotalFeedback()) * 100);\n  };\n\n  return (\n    <>\n      <Section title=\"Please leave feedback\">\n        <FeedbackOptions options={['good', 'neutral', 'bad']} onLeaveFeedback={handleFeedback} />\n\n        {countTotalFeedback() !== 0 ? (\n          <Statistics\n            good={feedbacks.good}\n            neutral={feedbacks.neutral}\n            bad={feedbacks.bad}\n            total={countTotalFeedback()}\n            positivePercentage={countPositiveFeedbackPercentage()}\n          />\n        ) : (\n          <Notification message=\"There is no feedback\" />\n        )}\n      </Section>\n    </>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}