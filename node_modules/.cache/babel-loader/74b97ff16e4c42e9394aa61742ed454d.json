{"ast":null,"code":"var _jsxFileName = \"/home/andreea/Projects/go-it/goit-react-hw-02-feedback/src/components/Statistics/Statistics.jsx\";\nimport React from 'react';\nimport style from './Statistics.module.css';\nimport PropTypes from 'prop-types';\nimport Notification from 'components/Notification/Notification';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Statistics(_ref) {\n  let {\n    good,\n    neutral,\n    bad,\n    total = 0,\n    positivePercentage = 0\n  } = _ref;\n\n  if (good || neutral || bad) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: style.statisticsWrapper,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Statistics\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: style.statisticsList,\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          children: [\"Good: \", good]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [\"Neutral: \", neutral]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [\"Bad: \", bad]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [\"Total: \", total]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [\"Positive feedback: \", positivePercentage, \" %\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(Notification, {\n      message: \"There is no feedback\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 12\n    }, this);\n  }\n}\n_c = Statistics;\nStatistics.propTypes = {\n  good: PropTypes.number.isRequired,\n  neutral: PropTypes.number.isRequired,\n  bad: PropTypes.number.isRequired,\n  total: PropTypes.number.isRequired,\n  positiveFeedback: PropTypes.number.isRequired\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"Statistics\");","map":{"version":3,"sources":["/home/andreea/Projects/go-it/goit-react-hw-02-feedback/src/components/Statistics/Statistics.jsx"],"names":["React","style","PropTypes","Notification","Statistics","good","neutral","bad","total","positivePercentage","statisticsWrapper","statisticsList","propTypes","number","isRequired","positiveFeedback"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,YAAP,MAAyB,sCAAzB;;AAEA,eAAe,SAASC,UAAT,OAMZ;AAAA,MANgC;AACjCC,IAAAA,IADiC;AAEjCC,IAAAA,OAFiC;AAGjCC,IAAAA,GAHiC;AAIjCC,IAAAA,KAAK,GAAG,CAJyB;AAKjCC,IAAAA,kBAAkB,GAAG;AALY,GAMhC;;AACD,MAAIJ,IAAI,IAAIC,OAAR,IAAmBC,GAAvB,EAA4B;AAC1B,wBACE;AAAK,MAAA,SAAS,EAAEN,KAAK,CAACS,iBAAtB;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAI,QAAA,SAAS,EAAET,KAAK,CAACU,cAArB;AAAA,gCACE;AAAA,+BAAWN,IAAX;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAA,kCAAcC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE;AAAA,8BAAUC,GAAV;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHF,eAIE;AAAA,gCAAYC,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJF,eAKE;AAAA,4CAAwBC,kBAAxB;AAAA;AAAA;AAAA;AAAA;AAAA,gBALF;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAYD,GAbD,MAaO;AACL,wBAAO,QAAC,YAAD;AAAc,MAAA,OAAO,EAAC;AAAtB;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;AACF;KAvBuBL,U;AAyBxBA,UAAU,CAACQ,SAAX,GAAuB;AACrBP,EAAAA,IAAI,EAAEH,SAAS,CAACW,MAAV,CAAiBC,UADF;AAErBR,EAAAA,OAAO,EAAEJ,SAAS,CAACW,MAAV,CAAiBC,UAFL;AAGrBP,EAAAA,GAAG,EAAEL,SAAS,CAACW,MAAV,CAAiBC,UAHD;AAIrBN,EAAAA,KAAK,EAAEN,SAAS,CAACW,MAAV,CAAiBC,UAJH;AAKrBC,EAAAA,gBAAgB,EAAEb,SAAS,CAACW,MAAV,CAAiBC;AALd,CAAvB","sourcesContent":["import React from 'react';\nimport style from './Statistics.module.css';\nimport PropTypes from 'prop-types';\nimport Notification from 'components/Notification/Notification';\n\nexport default function Statistics({\n  good,\n  neutral,\n  bad,\n  total = 0,\n  positivePercentage = 0,\n}) {\n  if (good || neutral || bad) {\n    return (\n      <div className={style.statisticsWrapper}>\n        <h2>Statistics</h2>\n        <ul className={style.statisticsList}>\n          <li>Good: {good}</li>\n          <li>Neutral: {neutral}</li>\n          <li>Bad: {bad}</li>\n          <li>Total: {total}</li>\n          <li>Positive feedback: {positivePercentage} %</li>\n        </ul>\n      </div>\n    );\n  } else {\n    return <Notification message=\"There is no feedback\" />;\n  }\n}\n\nStatistics.propTypes = {\n  good: PropTypes.number.isRequired,\n  neutral: PropTypes.number.isRequired,\n  bad: PropTypes.number.isRequired,\n  total: PropTypes.number.isRequired,\n  positiveFeedback: PropTypes.number.isRequired,\n};\n"]},"metadata":{},"sourceType":"module"}