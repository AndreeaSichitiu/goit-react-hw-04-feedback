{"ast":null,"code":"var _jsxFileName = \"/home/andreea/Projects/go-it/goit-react-hw-02-feedback/src/components/App.jsx\";\nimport React, { Component } from 'react';\nimport FeedbackOptions from './FeedbackOptions/FeedbackOptions';\nimport Statistics from './Statistics/Statistics';\nimport Notification from './Notification/Notification';\nimport Section from './Section/Section';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport class App extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      good: 0,\n      neutral: 0,\n      bad: 0\n    };\n\n    this.handleClick = option => {\n      this.setState(prev => {\n        return {\n          [option]: prev[option] + 1\n        };\n      });\n    };\n\n    this.countTotalFeedback = () => {\n      return this.state.good + this.state.neutral + this.state.bad;\n    };\n\n    this.countPositiveFeedbackPercentage = () => {\n      return Math.round(this.state.good / this.countTotalFeedback() * 100);\n    };\n  }\n\n  render() {\n    const {\n      good,\n      neutral,\n      bad\n    } = this.state;\n    const options = Object.keys(this.state); // const total = this.countTotalFeedback();\n    // const positiveFeedback = this.countPositiveFeedbackPercentage();\n\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Section, {\n        title: \"Please leave feedback\",\n        children: /*#__PURE__*/_jsxDEV(FeedbackOptions, {\n          options: options,\n          onLeaveFeedback: this.handleClick\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Section, {\n        title: \"Statistics\",\n        children: this.countTotalFeedback() > 0 ? /*#__PURE__*/_jsxDEV(Statistics, {\n          good: good,\n          neutral: neutral,\n          bad: bad,\n          total: this.countTotalFeedback(),\n          positivePercentage: this.countPositiveFeedbackPercentage()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(Notification, {\n          message: \"There is no feedback\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 1\n      }, this)]\n    }, void 0, true);\n  }\n\n}","map":{"version":3,"sources":["/home/andreea/Projects/go-it/goit-react-hw-02-feedback/src/components/App.jsx"],"names":["React","Component","FeedbackOptions","Statistics","Notification","Section","App","state","good","neutral","bad","handleClick","option","setState","prev","countTotalFeedback","countPositiveFeedbackPercentage","Math","round","render","options","Object","keys"],"mappings":";AAAA,OAAOA,KAAP,IAAiBC,SAAjB,QAAkC,OAAlC;AACA,OAAOC,eAAP,MAA4B,mCAA5B;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAOC,YAAP,MAAyB,6BAAzB;AACA,OAAOC,OAAP,MAAoB,mBAApB;;;AAEA,OAAO,MAAMC,GAAN,SAAkBL,SAAlB,CAA4B;AAAA;AAAA;AAAA,SACjCM,KADiC,GACzB;AACNC,MAAAA,IAAI,EAAE,CADA;AAENC,MAAAA,OAAO,EAAE,CAFH;AAGNC,MAAAA,GAAG,EAAE;AAHC,KADyB;;AAAA,SAOjCC,WAPiC,GAOlBC,MAAD,IAAY;AACxB,WAAKC,QAAL,CAAeC,IAAD,IAAU;AACtB,eAAO;AACL,WAACF,MAAD,GAAUE,IAAI,CAACF,MAAD,CAAJ,GAAe;AADpB,SAAP;AAGD,OAJD;AAKD,KAbgC;;AAAA,SAejCG,kBAfiC,GAeZ,MAAM;AACzB,aAAO,KAAKR,KAAL,CAAWC,IAAX,GAAkB,KAAKD,KAAL,CAAWE,OAA7B,GAAuC,KAAKF,KAAL,CAAWG,GAAzD;AACD,KAjBgC;;AAAA,SAmBjCM,+BAnBiC,GAmBC,MAAM;AACtC,aAAOC,IAAI,CAACC,KAAL,CAAY,KAAKX,KAAL,CAAWC,IAAX,GAAkB,KAAKO,kBAAL,EAAnB,GAAgD,GAA3D,CAAP;AACD,KArBgC;AAAA;;AAuBjCI,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEX,MAAAA,IAAF;AAAQC,MAAAA,OAAR;AAAiBC,MAAAA;AAAjB,QAAyB,KAAKH,KAApC;AACA,UAAMa,OAAO,GAAGC,MAAM,CAACC,IAAP,CAAY,KAAKf,KAAjB,CAAhB,CAFO,CAGP;AACA;;AAEA,wBACE;AAAA,8BACE,QAAC,OAAD;AAAS,QAAA,KAAK,EAAC,uBAAf;AAAA,+BACE,QAAC,eAAD;AACE,UAAA,OAAO,EAAEa,OADX;AAEE,UAAA,eAAe,EAAE,KAAKT;AAFxB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAON,QAAC,OAAD;AAAS,QAAA,KAAK,EAAC,YAAf;AAAA,kBACW,KAAKI,kBAAL,KAA4B,CAA5B,gBACC,QAAC,UAAD;AACE,UAAA,IAAI,EAAEP,IADR;AAEE,UAAA,OAAO,EAAEC,OAFX;AAGE,UAAA,GAAG,EAAEC,GAHP;AAIE,UAAA,KAAK,EAAE,KAAKK,kBAAL,EAJT;AAKE,UAAA,kBAAkB,EAAE,KAAKC,+BAAL;AALtB;AAAA;AAAA;AAAA;AAAA,gBADD,gBASC,QAAC,YAAD;AAAc,UAAA,OAAO,EAAC;AAAtB;AAAA;AAAA;AAAA;AAAA;AAVZ;AAAA;AAAA;AAAA;AAAA,cAPM;AAAA,oBADF;AAuBD;;AApDgC","sourcesContent":["import React,  { Component } from 'react';\nimport FeedbackOptions from './FeedbackOptions/FeedbackOptions';\nimport Statistics from './Statistics/Statistics';\nimport Notification from './Notification/Notification';\nimport Section from './Section/Section';\n\nexport class App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  handleClick = (option) => {\n    this.setState((prev) => {\n      return {\n        [option]: prev[option] + 1\n      };\n    });\n  };\n\n  countTotalFeedback = () => {\n    return this.state.good + this.state.neutral + this.state.bad;\n  };\n\n  countPositiveFeedbackPercentage = () => { \n    return Math.round((this.state.good / this.countTotalFeedback()) * 100);\n  };\n\n  render() {\n    const { good, neutral, bad } = this.state;\n    const options = Object.keys(this.state);\n    // const total = this.countTotalFeedback();\n    // const positiveFeedback = this.countPositiveFeedbackPercentage();\n\n    return (\n      <>\n        <Section title=\"Please leave feedback\">\n          <FeedbackOptions\n            options={options}\n            onLeaveFeedback={this.handleClick}\n          />\n</Section>\n<Section title=\"Statistics\">\n          {this.countTotalFeedback() > 0 ? (\n            <Statistics\n              good={good}\n              neutral={neutral}\n              bad={bad}\n              total={this.countTotalFeedback()}\n              positivePercentage={this.countPositiveFeedbackPercentage()}\n            />\n          ) : (\n            <Notification message=\"There is no feedback\" />\n          )}\n        </Section>\n      </>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}