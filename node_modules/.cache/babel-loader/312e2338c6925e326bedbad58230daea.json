{"ast":null,"code":"var _jsxFileName = \"/home/andreea/Projects/go-it/goit-react-hw-02-feedback/src/components/App.jsx\";\nimport React from \"react\";\nimport FeedbackOptions from \"./FeedbackOptions/FeedbackOptions\";\nimport Statistics from \"./Statistics/Statistics\";\nimport Notification from \"./Notification/Notification\";\nimport Section from \"./Section/Section\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport class App extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      good: 0,\n      neutral: 0,\n      bad: 0\n    };\n\n    this.onFeedback = event => {\n      this.setState({\n        [event]: this.state[event] + 1\n      });\n    };\n\n    this.countTotalFeedback = () => {\n      return this.state.good + this.state.neutral + this.state.bad;\n    };\n\n    this.countPositiveFeedbackPercentage = () => {\n      const totalFeedback = this.countTotalFeedback();\n      const percent = this.state.good * 100 / totalFeedback;\n      return Math.round(percent);\n    };\n  }\n\n  render() {\n    const {\n      good,\n      neutral,\n      bad\n    } = this.state;\n    const total = this.countTotalFeedback();\n    const positiveFeedback = this.countPositiveFeedbackPercentage();\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Section, {\n        title: \"Please leave feedback\",\n        children: [/*#__PURE__*/_jsxDEV(FeedbackOptions, {\n          options: this.state,\n          onFeedback: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 1\n        }, this), total === 0 ? /*#__PURE__*/_jsxDEV(Notification, {\n          message: \"There is no feedback\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 20\n        }, this) : /*#__PURE__*/_jsxDEV(Statistics, {\n          good: good,\n          neutral: neutral,\n          bad: bad,\n          total: total,\n          positivePercentage: positiveFeedback\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 2\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 3\n      }, this)\n    }, void 0, false);\n  }\n\n}","map":{"version":3,"sources":["/home/andreea/Projects/go-it/goit-react-hw-02-feedback/src/components/App.jsx"],"names":["React","FeedbackOptions","Statistics","Notification","Section","App","Component","state","good","neutral","bad","onFeedback","event","setState","countTotalFeedback","countPositiveFeedbackPercentage","totalFeedback","percent","Math","round","render","total","positiveFeedback"],"mappings":";AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,eAAP,MAA4B,mCAA5B;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAOC,YAAP,MAAyB,6BAAzB;AACA,OAAOC,OAAP,MAAoB,mBAApB;;;AAEA,OAAO,MAAMC,GAAN,SAAmBL,KAAK,CAACM,SAAzB,CAAmC;AAAA;AAAA;AAAA,SACxCC,KADwC,GAChC;AACNC,MAAAA,IAAI,EAAE,CADA;AAENC,MAAAA,OAAO,EAAE,CAFH;AAGNC,MAAAA,GAAG,EAAE;AAHC,KADgC;;AAAA,SAOxCC,UAPwC,GAO1BC,KAAD,IAAW;AACtB,WAAKC,QAAL,CAAc;AAAC,SAACD,KAAD,GAAS,KAAKL,KAAL,CAAWK,KAAX,IAAoB;AAA9B,OAAd;AACD,KATuC;;AAAA,SAYxCE,kBAZwC,GAYnB,MAAM;AAC3B,aAAO,KAAKP,KAAL,CAAWC,IAAX,GAAkB,KAAKD,KAAL,CAAWE,OAA7B,GAAuC,KAAKF,KAAL,CAAWG,GAAzD;AACD,KAdyC;;AAAA,SAgB1CK,+BAhB0C,GAgBR,MAAM;AACtC,YAAMC,aAAa,GAAG,KAAKF,kBAAL,EAAtB;AACA,YAAMG,OAAO,GAAI,KAAKV,KAAL,CAAWC,IAAX,GAAkB,GAAnB,GAA0BQ,aAA1C;AACA,aAAOE,IAAI,CAACC,KAAL,CAAWF,OAAX,CAAP;AACD,KApByC;AAAA;;AAsB1CG,EAAAA,MAAM,GAAG;AACT,UAAM;AAAEZ,MAAAA,IAAF;AAAQC,MAAAA,OAAR;AAAiBC,MAAAA;AAAjB,QAAwB,KAAKH,KAAnC;AACA,UAAMc,KAAK,GAAG,KAAKP,kBAAL,EAAd;AACA,UAAMQ,gBAAgB,GAAG,KAAKP,+BAAL,EAAzB;AAEA,wBACE;AAAA,6BACA,QAAC,OAAD;AAAS,QAAA,KAAK,EAAC,uBAAf;AAAA,gCACF,QAAC,eAAD;AACA,UAAA,OAAO,EAAE,KAAKR,KADd;AAEA,UAAA,UAAU;AAFV;AAAA;AAAA;AAAA;AAAA,gBADE,EAICc,KAAK,KAAK,CAAX,gBAAiB,QAAC,YAAD;AAAc,UAAA,OAAO,EAAC;AAAtB;AAAA;AAAA;AAAA;AAAA,gBAAjB,gBACD,QAAC,UAAD;AACA,UAAA,IAAI,EAAEb,IADN;AAEA,UAAA,OAAO,EAAEC,OAFT;AAGA,UAAA,GAAG,EAAEC,GAHL;AAID,UAAA,KAAK,EAAEW,KAJN;AAKD,UAAA,kBAAkB,EAAEC;AALnB;AAAA;AAAA;AAAA;AAAA,gBALC;AAAA;AAAA;AAAA;AAAA;AAAA;AADA,qBADF;AAiBC;;AA5CyC","sourcesContent":["\nimport React from \"react\";\nimport FeedbackOptions from \"./FeedbackOptions/FeedbackOptions\";\nimport Statistics from \"./Statistics/Statistics\";\nimport Notification from \"./Notification/Notification\";\nimport Section from \"./Section/Section\";\n\nexport class App  extends React.Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  onFeedback = (event) => {\n    this.setState({[event]: this.state[event] + 1})\n  }\n\n    \n  countTotalFeedback = () => {\n  return this.state.good + this.state.neutral + this.state.bad;\n}\n\ncountPositiveFeedbackPercentage = () => {\n  const totalFeedback = this.countTotalFeedback();\n  const percent = (this.state.good * 100) / totalFeedback;\n  return Math.round(percent);\n}\n\nrender() {\nconst { good, neutral, bad} = this.state;\nconst total = this.countTotalFeedback();\nconst positiveFeedback = this.countPositiveFeedbackPercentage();\n\nreturn (\n  <>\n  <Section title=\"Please leave feedback\">\n<FeedbackOptions\noptions={this.state}\nonFeedback/>\n{ (total === 0) ? (<Notification message=\"There is no feedback\"></Notification>) : (\n <Statistics\n good={good}\n neutral={neutral}\n bad={bad}\ntotal={total}\npositivePercentage={positiveFeedback}/>)}\n</Section>\n </>\n)\n\n}\n\n}     \n     \n     \n"]},"metadata":{},"sourceType":"module"}